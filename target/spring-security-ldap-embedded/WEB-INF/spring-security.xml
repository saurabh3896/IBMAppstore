<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	   		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/security
			http://www.springframework.org/schema/security/spring-security-3.0.xsd">
	
	<!-- This is where we configure Spring-Security  -->
        
	<security:http auto-config="true" use-expressions="true" access-denied-page="/denied" >
	
            <security:intercept-url pattern="/login" access="permitAll"/>
            <security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/>
            <security:intercept-url pattern="/common" access="hasRole('ROLE_USER')"/>
		
            <security:form-login
                login-page="/login"
                authentication-failure-url="/login?error=true"
                default-target-url="/main/common"/>
			
            <security:logout 
                invalidate-session="true"
                logout-success-url="/login"
                logout-url="/logout"/>
	
	</security:http>
	
	<!-- 
            For authentication:
            user-search-filter: the attribute name that contains the user name 
	    user-search-base: the base path where to find user information
		    
	    For authorization:
	    group-search-filter: the attribute name that contains the full dn of a user
	    group-search-base: the base path where to find role information
	    group-role-attribute: the attribute name that contains the role type
	    role-prefix: the prefix to be added when retrieving role values
		    
            For server access:
	    manager-dn: the full dn of the person that has access to an LDAP server
	    manager-password: the password of the person that has access to an LDAP server
	-->
        
	<security:authentication-manager>
	    <security:ldap-authentication-provider  
                user-search-filter="(uid={0})"
	        user-search-base="ou=users"
	        group-search-filter="(uniqueMember={0})"
	        group-search-base="ou=groups"
	        group-role-attribute="cn"
	        role-prefix="ROLE_">
	    </security:ldap-authentication-provider>
	</security:authentication-manager>
	
	<!-- 
            Use an embedded LDAP server. We need to declare the location of the LDIF file
            We also need to customize the root attribute default is "dc=springframework,dc=org"
        -->
        
	<security:ldap-server ldif="classpath:mojo.ldif"  root="o=mojo"/>
	
</beans>
